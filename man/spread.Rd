% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spread.R
\name{spread}
\alias{spread}
\alias{spread.matrix}
\title{Calculate a Gaussian resistant kernel}
\usage{
spread(x, ...)

\method{spread}{matrix}(
  x,
  row,
  col,
  sd,
  cellsize = 1,
  sd_threshold = 3,
  square = FALSE,
  symmetrical = TRUE,
  ...
)
}
\arguments{
\item{x}{a matrix of resistance values all >=1}

\item{...}{Arguments to be passed to other methods.}

\item{row}{the focal row of the spread}

\item{col}{the focal column of the spread}

\item{sd}{the standard deviation of the Gaussian function in cost length
(resistance * physical distance). The resulting spread will be equivalent
a Gaussian kernel with this standard deviation when applied to a minimally
resistant surface: resistance of 1 for all cells.}

\item{cellsize}{the size of each cell in physical units, typically meters.}

\item{sd_threshold}{the number of standard deviations beyond which the
height of the surface is not calculated}

\item{square}{if \code{TRUE} then the diagonal cells will be considered to be one
cell length away from the center and the spread will tend to be square.
The default of \code{FALSE} uses a diagonal length of 1.4 cells and spreads
tend to be octagonal.}

\item{symmetrical}{If \code{TRUE} then the average resistance of the source
and neighboring destination cell is used to represent the cost of stepping
to a neighboring cell. If \code{FALSE} then the destination cell is used to
represent the cost of the step.
The original 2009 algorithm is equivalent to \code{FALSE}.
If \code{TRUE} then the cost difference between a source and any
(not necessarily adjacent) destination  will be the same as the cost
distance from that destination to the source,
and both will include half the cost of traversing the source and destination
cells.
If \code{FALSE} that is not guaranteed as the source cell cost is not included
and the full destination cell cost is.}
}
\value{
a matrix with the same dimensions as \code{x} but representing a
Gaussian spread from the focal cell.
}
\description{
Calculate a Gaussian resistant kernel
}
\note{
The height of the kernel returned is dependent on the \code{sd} and is the
same as you'd get by calling \code{dnorm(cost_dist_to_center, sd=sd)}.
One side effect of this is that the larger the \code{sd} the lower the height.
You can normalize this by dividing the resultant kernel by
\code{dnorm(0, sd = sd)} which would then make the height at the center of
the kernel 1.
}
\examples{
#' # a minimally resistant matrix:
b <- matrix(1, 10, 10)

# the resulting spread
image(spread(b, 3, 3, 3) / dnorm(0, sd=3)  )

# a cross section of the spread compared to dnorm()
plot(spread(b, 3, 3, 3)[,3])
curve(dnorm(x, 3, 3), add=TRUE)

# add a higher resistance band
b[5,] <- 3

image(spread(b, 3, 3, 3) / dnorm(0, sd=3)  )

plot(spread(b, 3, 3, 3)[,3])
abline(v = 5, col = "red") # location of higher resistance
curve(dnorm(x, 3, 3), add=TRUE)

}
\references{
Compton BW, McGarigal K, Cushman SA, Gamble LR.
A resistant-kernel model of connectivity for amphibians that breed in
vernal pools. Conserv Biol. 2007 Jun;21(3):788-99.
doi: 10.1111/j.1523-1739.2007.00674.x. PMID: 17531056.
}
\seealso{
\link{raw_spread}
}
